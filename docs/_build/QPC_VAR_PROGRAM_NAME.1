.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "QPC_VAR_PROGRAM_NAME" "1" "BUILD_DATE" "" "QPC_VAR_PROGRAM_NAME"
.SH NAME
.sp
QPC_VAR_PROGRAM_NAME \- Inspect and report on product entitlement metadata from various sources, including networks and systems management solutions.
.SH SYNOPSIS
.sp
\fBQPC_VAR_PROGRAM_NAME command subcommand [options]\fP
.SH DESCRIPTION
.sp
The QPC_VAR_PROJECT tool, accessed through the \fBQPC_VAR_PROGRAM_NAME\fP command, is an inspection and reporting tool. It is designed to identify environment data, or \fIfacts\fP, such as the number of physical and virtual systems on a network, their operating systems, and other configuration data. In addition, it is designed to identify and report more detailed facts for some versions of key Red Hat packages and products for the Linux based IT resources in that network. The ability to inspect the software and systems that are running on your network improves your ability to understand and report on your usage. Ultimately, this inspection and reporting process is part of the larger system administration task of managing your inventories.
.sp
The QPC_VAR_PROJECT tool uses two types of configuration to manage the inspection process. A \fIcredential\fP contains configuration, such as the username and password or SSH key of the user that runs the inspection process. Certain credential types also support the use of an access token as an alternative authentication method. A \fIsource\fP defines the entity to be inspected and one or more credentials to use during the inspection process. The entity to be inspected can be a host, subnet, network, or systems management solution such as Openshift, Red Hat Advanced Cluster Security, Ansible Automation Platform, vCenter Server, or Satellite. You can save multiple credentials and sources to use with QPC_VAR_PROJECT in various combinations as you run inspection processes, or \fIscans\fP\&. When you have completed a scan, you can access the output as a \fIreport\fP to review the results.
By default, the credentials and sources that are created when using QPC_VAR_PROJECT are encrypted in a database. The values are encrypted with AES\-256 encryption. They are decrypted when the QPC_VAR_PROJECT server runs a scan by using a \fIvault password\fP to access the encrypted values that are stored in the database.
.sp
The QPC_VAR_PROJECT tool is an \fIagentless\fP inspection tool, so there is no need to install the tool on the sources to be inspected.
.sp
This manual page describes the commands, subcommands, and options for the \fBQPC_VAR_PROGRAM_NAME\fP command and includes usage information and example commands.
.SH USAGE
.sp
The \fBQPC_VAR_PROGRAM_NAME\fP command has several subcommands that encompass the inspection and reporting workflow. Within that workflow, \fBQPC_VAR_PROGRAM_NAME\fP performs the following major tasks:
.INDENT 0.0
.IP \(bu 2
Logging in to the server:
.sp
\fBQPC_VAR_PROGRAM_NAME server login \-\-username admin\fP
.IP \(bu 2
Creating credentials:
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name=credname1 \-\-type=type \-\-username=user1 \-\-password\fP
.IP \(bu 2
Creating sources:
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name=sourcename1 \-\-type=type \-\-hosts server1.example.com server2.example.com \-\-cred credname1 credname2\fP
.IP \(bu 2
Creating scans:
.sp
\fBQPC_VAR_PROGRAM_NAME scan add \-\-name=scan1 \-\-sources sourcename1 sourcename2\fP
.IP \(bu 2
Running a scan:
.sp
\fBQPC_VAR_PROGRAM_NAME scan start \-\-name=scan1\fP
.IP \(bu 2
Working with scans:
.sp
\fBQPC_VAR_PROGRAM_NAME scan show \-\-name=scan1\fP
.IP \(bu 2
Working with scan jobs:
.sp
\fBQPC_VAR_PROGRAM_NAME scan job \-\-id=1\fP
.IP \(bu 2
Generating reports:
.sp
\fBQPC_VAR_PROGRAM_NAME report deployments \-\-id 1 \-\-csv \-\-output\-file=~/scan_result.csv\fP
.UNINDENT
.sp
The following sections describe these commands, their subcommands, and their options in more detail. They also describe additional tasks that are not highlighted in the previous list of major workflow tasks.
.SH SERVER AUTHENTICATION
.sp
Use the \fBQPC_VAR_PROGRAM_NAME server\fP command to configure connectivity with the server and to log in to and log out of the server.
.SS Configuring the server
.sp
To configure the connection to the server, supply the host address. Supplying a port for the connection is optional.
.sp
\fBQPC_VAR_PROGRAM_NAME server config \-\-host=\fP \fIhost\fP \fB[\-\-port=\fP \fIport\fP \fB]\fP
.sp
\fB\-\-host=host\fP
.INDENT 0.0
.INDENT 3.5
Required. Sets the host address for the server. If you are running the \fBQPC_VAR_PROGRAM_NAME\fP command on the same system as the server, the default host address for the server is \fB127.0.0.1\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-port=port\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the port to use to connect to the server. The default is \fB9443\fP\&.
.UNINDENT
.UNINDENT
.SS Logging in to the server
.sp
To log in to the server after the connection is configured, use the \fBlogin\fP subcommand. This command retrieves a token that is used for authentication with any command line interface commands that follow it.
.sp
\fBQPC_VAR_PROGRAM_NAME server login [\-\-username=\fP \fIusername\fP \fB] [\-\-password=\fP \fIpassword\fP \fB]\fP
.sp
\fB\-\-username=username\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the username that is used to log in to the server. If omitted, QPC_VAR_PROGRAM_NAME will prompt for the server username.
.UNINDENT
.UNINDENT
.sp
\fB\-\-password=password\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the password that is used to log in to the server. If omitted, QPC_VAR_PROGRAM_NAME will prompt for the server password.
.UNINDENT
.UNINDENT
.SS Logging out of the server
.sp
To log out of the server, use the \fBlogout\fP subcommand. This command removes the token that was created when the \fBlogin\fP command was used.
.sp
\fBQPC_VAR_PROGRAM_NAME server logout\fP
.SS Viewing the server status
.sp
To view or save the status information for the server, use the \fBstatus\fP subcommand. This command returns data about your QPC_VAR_PROJECT server environment, such as server build and API versions, environment variable information, installed prerequisites and versions, and other server metadata that can help diagnose issues during troubleshooting.
.sp
\fBQPC_VAR_PROGRAM_NAME server status [\-\-output\-file\fP \fIpath\fP \fB]\fP
.sp
\fB\-\-output\-file=path\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the path to a file location where the status information is saved.
.UNINDENT
.UNINDENT
.SH CREDENTIALS
.sp
Use the \fBQPC_VAR_PROGRAM_NAME cred\fP command to create and manage credentials.
.sp
A credential contains a username\-password pair, SSH key, or access token to authenticate with the remote servers during a scan. The QPC_VAR_PROJECT tool uses SSH to connect to servers on the network and uses credentials to access those servers.
.sp
When a scan runs, it uses a source that contains information such as the host names, IP addresses, a network, or a systems management solution to be accessed. The source also contains references to the credentials that are required to access those systems. A single source can contain a reference to multiple credentials as needed to connect to all systems in that network or systems management solution.
.SS Creating and Editing Credentials
.sp
To create a credential, supply the type of credential and supply SSH credentials as either a username\-password pair, a username\-key pair, or an access token. The QPC_VAR_PROJECT tool stores each set of credentials in a separate credential entry.
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name=\fP \fIname\fP \fB\-\-type=\fP \fI(network | vcenter | satellite | openshift | rhacs | ansible)\fP \fB\-\-username=\fP \fIusername\fP \fB(\-\-password | \-\-sshkeyfile=\fP \fIkey_file\fP | \-\-sshkey**)** \fB[\-\-sshpassphrase]\fP \fB\-\-become\-method=\fP \fI(sudo | su | pbrun | pfexec | doas | dzdo | ksu | runas )\fP \fB\-\-become\-user=\fP \fIuser\fP \fB[\-\-become\-password]\fP \fB[\-\-token]\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Required. Sets the name of the new credential. For the value, use a descriptive name that is meaningful to your organization. For example, you could identify the user or server that the credential relates to, such as \fBadmin12\fP or \fBserver1_jdoe\fP\&. Do not include the password as part of this value, because the value for the \fB\-\-name\fP option might be logged or printed during \fBQPC_VAR_PROGRAM_NAME\fP execution.
.UNINDENT
.UNINDENT
.sp
\fB\-\-type=type\fP
.INDENT 0.0
.INDENT 3.5
Required. Sets the type of credential. The value must be \fBnetwork\fP, \fBvcenter\fP, \fBsatellite\fP, \fBopenshift\fP, \fBrhacs\fP or \fBansible\fP\&. You cannot edit a credential\(aqs type after creating it.
.UNINDENT
.UNINDENT
.sp
\fB\-\-username=username\fP
.INDENT 0.0
.INDENT 3.5
Required for both password and SSH key authentication. Sets the username of the SSH identity that is used to bind to the server.
.UNINDENT
.UNINDENT
.sp
\fB\-\-password\fP
.INDENT 0.0
.INDENT 3.5
Prompts for the password for the \fB\-\-username\fP identity. Mutually exclusive with the \fB\-\-sshkeyfile\fP, \fB\-\-sshkey\fP and \fB\-\-token\fP options.
.UNINDENT
.UNINDENT
.sp
\fB\-\-sshkeyfile=key_file\fP
.INDENT 0.0
.INDENT 3.5
Sets the path of the file that contains the private SSH key for the \fB\-\-username\fP identity. Mutually exclusive with the \fB\-\-password\fP, \fB\-\-ssh\-key\fP and \fB\-\-token\fP options.
.UNINDENT
.UNINDENT
.sp
\fB\-\-sshkey\fP
.INDENT 0.0
.INDENT 3.5
Prompts for the private SSH key for the \fB\-\-username\fP identity. Mutually exclusive with the \fB\-\-password\fP, \fB\-\-token\fP and \fB\-\-sshkeyfile\fP options.
.UNINDENT
.UNINDENT
.sp
\fB\-\-sshpassphrase\fP
.INDENT 0.0
.INDENT 3.5
Prompts for the passphrase to be used when connecting with an SSH keyfile or SSH key that requires a passphrase. Can only be used with the \fB\-\-sshkeyfile\fP or \fB\-\-sshkey\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-become\-method=become_method\fP
.INDENT 0.0
.INDENT 3.5
Sets the method to become for privilege escalation when running a network scan. The value must be \fBsudo\fP, \fBsu\fP, \fBpbrun\fP, \fBpfexec\fP, \fBdoas\fP, \fBdzdo\fP, \fBksu\fP, or \fBrunas\fP\&. The default is set to \fBsudo\fP when the credential type is \fBnetwork\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-become\-user=user\fP
.INDENT 0.0
.INDENT 3.5
Sets the user to become when running a privileged command during a network scan.
.UNINDENT
.UNINDENT
.sp
\fB\-\-become\-password\fP
.INDENT 0.0
.INDENT 3.5
Prompts for the privilege escalation password to be used when running a network scan.
.UNINDENT
.UNINDENT
.sp
\fB\-\-token\fP
.INDENT 0.0
.INDENT 3.5
Prompts for the access token for authentication. Mutually exclusive with the \fB\-\-sshkeyfile\fP, \fB\-\-sshkey\fP and \fB\-\-password\fP options.
.UNINDENT
.UNINDENT
.sp
The information in a credential might change, including passwords, become passwords, SSH keys, the become_method, tokens or even the username. For example, your local security policies might require you to change passwords periodically. Use the \fBQPC_VAR_PROGRAM_NAME cred edit\fP command to change credential information. The parameters for \fBQPC_VAR_PROGRAM_NAME cred edit\fP are the same as those for \fBQPC_VAR_PROGRAM_NAME cred add\fP\&.
.sp
\fBQPC_VAR_PROGRAM_NAME cred edit \-\-name=\fP \fIname\fP \fB\-\-username=\fP \fIusername\fP \fB(\-\-password | \-\-sshkeyfile=\fP \fIkey_file\fP | \-\-sshkey \fB)\fP \fB[\-\-sshpassphrase]\fP \fB\-\-become\-method=\fP \fI(sudo | su | pbrun | pfexec | doas | dzdo | ksu | runas )\fP \fB\-\-become\-user=\fP \fIuser\fP \fB[\-\-become\-password]\fP \fB[\-\-token]\fP
.SS Listing and Showing Credentials
.sp
The \fBQPC_VAR_PROGRAM_NAME cred list\fP command returns the details for every credential that is configured for QPC_VAR_PROJECT. This output includes the name, username, password, SSH keyfile, sudo password, or token (if applicable) for each entry. Passwords and tokens are masked if provided, if not, they will appear as \fBnull\fP\&.
.sp
\fBQPC_VAR_PROGRAM_NAME cred list \-\-type=\fP \fI(network | vcenter | satellite | openshift | rhacs | ansible)\fP
.sp
\fB\-\-type=type\fP
.INDENT 0.0
.INDENT 3.5
Optional.  Filters the results by credential type.  The value must be \fBnetwork\fP, \fBvcenter\fP, \fBsatellite\fP, \fBopenshift\fP, \fBrhacs\fP, or \fBansible\fP\&.
.UNINDENT
.UNINDENT
.sp
The \fBQPC_VAR_PROGRAM_NAME cred show\fP command is the same as the \fBQPC_VAR_PROGRAM_NAME cred list\fP command, except that it returns details for a single specified credential.
.sp
\fBQPC_VAR_PROGRAM_NAME cred show \-\-name=\fP \fIname\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the name of the credential entry to display.
.UNINDENT
.UNINDENT
.SS Clearing Credentials
.sp
As the network infrastructure changes, it might be necessary to delete some credentials. Use the \fBclear\fP subcommand to delete credentials.
.sp
\fBIMPORTANT:\fP Remove or change the credential from any source that uses it \fIbefore\fP clearing a credential. Otherwise, any attempt to use the source to run a scan runs the command with a nonexistent credential, an action that causes the \fBQPC_VAR_PROGRAM_NAME\fP command to fail.
.sp
\fBQPC_VAR_PROGRAM_NAME cred clear (\-\-name\fP \fIname\fP \fB| \-\-all)\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Contains the credential to clear. Mutually exclusive with the \fB\-\-all\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-all\fP
.INDENT 0.0
.INDENT 3.5
Clears all credentials. Mutually exclusive with the \fB\-\-name\fP option.
.UNINDENT
.UNINDENT
.SH SOURCES
.sp
Use the \fBQPC_VAR_PROGRAM_NAME source\fP command to create and manage sources.
.sp
A source contains a single entity or a set of multiple entities that are to be inspected. A source can be one or more physical machines, virtual machines, or containers, or it can be a collection of network information, including IP addresses or host names, or it can be information about a systems management solution such as Openshift, Red Hat Advanced Cluster Security, Ansible Automation Platform, vCenter Server, or Satellite. The source also contains information about the SSH ports and SSH credentials that are needed to access the systems to be inspected. The SSH credentials are provided through reference to one or more of the QPC_VAR_PROJECT credentials that you configure.
.sp
When you configure a scan, it contains references to one or more sources, including the credentials that are provided in each source. Therefore, you can reference sources in different scan configurations for various purposes, for example, to scan your entire infrastructure or a specific sector of that infrastructure.
.SS Creating and Editing Sources
.sp
To create a source, supply the type of source with the \fBtype\fP option, one or more host names or IP addresses to connect to with the \fB\-\-hosts\fP option, and the credentials needed to access those systems with the \fB\-\-cred\fP option. The \fBQPC_VAR_PROGRAM_NAME source\fP command allows multiple entries for the \fBhosts\fP and \fBcred\fP options. Therefore, a single source can access a collection of servers and subnets as needed to create an accurate and complete scan.
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name=\fP \fIname\fP  \fB\-\-type=\fP \fI(network | vcenter | satellite | openshift | rhacs | ansible)\fP \fB\-\-hosts\fP \fIip_address\fP \fB\-\-cred\fP \fIcredential\fP \fB[\-\-exclude\-hosts\fP \fIip_address\fP \fB]\fP \fB[\-\-port=\fP \fIport\fP \fB]\fP \fB[\-\-use\-paramiko=\fP \fI(True | False)\fP \fB]\fP \fB[\-\-ssl\-cert\-verify=\fP \fI(True | False)\fP \fB]\fP \fB[\-\-ssl\-protocol=\fP \fIprotocol\fP \fB]\fP \fB[\-\-disable\-ssl=\fP \fI(True | False)\fP \fB]\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Required. Sets the name of the new source. For the value, use a descriptive name that is meaningful to your organization, such as \fBAPSubnet\fP or \fBLab3\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-type=type\fP
.INDENT 0.0
.INDENT 3.5
Required. Sets the type of source.  The value must be \fBnetwork\fP, \fBvcenter\fP, \fBsatellite\fP, \fBopenshift\fP, \fBrhacs\fP, or \fBansible\fP\&. The type cannot be edited after a source is created.
.UNINDENT
.UNINDENT
.sp
\fB\-\-hosts ip_address\fP
.INDENT 0.0
.INDENT 3.5
Sets the host name, IP address, or IP address range to use when running a scan. You can also provide a path for a file that contains a list of host names or IP addresses or ranges, where each item is on a separate line. The following examples show several different formats that are allowed as values for the \fB\-\-hosts\fP option:
.INDENT 0.0
.IP \(bu 2
A specific host name:
.sp
\fB\-\-hosts server.example.com\fP
.IP \(bu 2
A specific IP address:
.sp
\fB\-\-hosts 192.0.2.19\fP
.IP \(bu 2
An IP address range, provided in CIDR or Ansible notation. This value is only valid for the \fBnetwork\fP type:
.sp
\fB\-\-hosts 192.0.2.[0:255]\fP
or
\fB\-\-hosts 192.0.2.0/24\fP
.IP \(bu 2
A file:
.sp
\fB\-\-hosts /home/user1/hosts_file\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-exclude\-hosts ip_address\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the host name, IP address, or IP address range to exclude when running a scan. Values for this option use the same formatting as the \fB\-\-hosts\fP option examples.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cred credential\fP
.INDENT 0.0
.INDENT 3.5
Contains the name of the credential to use to authenticate to the systems that are being scanned. If the individual systems that are being scanned each require different authentication credentials, you can use more than one credential. To add multiple credentials to the source, separate each value with a space, for example:
.sp
\fB\-\-cred first_auth second_auth\fP
.sp
\fBIMPORTANT:\fP A credential must exist before you attempt to use it in a source. A credential must be of the same type as the source.
.UNINDENT
.UNINDENT
.sp
\fB\-\-port=port\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets a port to be used for the scan. This value supports connection and inspection on a non\-standard port. By default, a Network scan uses port 22, vCenter, Ansible, RHACS and Satellite scans use port 443, and an Openshift scan uses port 6443.
.UNINDENT
.UNINDENT
.sp
\fB\-\-use\-paramiko=(True | False)\fP
.INDENT 0.0
.INDENT 3.5
Optional. Changes the Ansible connection method from the default open\-ssh to the python ssh implementation.
.UNINDENT
.UNINDENT
.sp
\fB\-\-ssl\-cert\-verify=(True | False)\fP
.INDENT 0.0
.INDENT 3.5
Optional. Determines whether SSL certificate validation will be performed for the scan.
.UNINDENT
.UNINDENT
.sp
\fB\-\-ssl\-protocol=protocol\fP
.INDENT 0.0
.INDENT 3.5
Optional. Determines the SSL protocol to be used for a secure connection during the scan. The value must be \fBSSLv23\fP, \fBTLSv1\fP, \fBLSv1_1\fP, or \fBTLSv1_2\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-disable\-ssl=(True | False)\fP
.INDENT 0.0
.INDENT 3.5
Optional. Determines whether SSL communication will be disabled for the scan.
.UNINDENT
.UNINDENT
.sp
The information in a source might change as the structure of the network changes. Use the \fBQPC_VAR_PROGRAM_NAME source edit\fP command to edit a source to accommodate those changes.
.sp
Although \fBQPC_VAR_PROGRAM_NAME source\fP options can accept more than one value, the \fBQPC_VAR_PROGRAM_NAME source edit\fP command is not additive. To edit a source and add a new value for an option, you must enter both the current and the new values for that option. Include only the options that you want to change in the \fBQPC_VAR_PROGRAM_NAME source edit\fP command. Options that are not included are not changed.
.sp
\fBQPC_VAR_PROGRAM_NAME source edit \-\-name\fP \fIname\fP \fB[\-\-hosts\fP \fIip_address\fP \fB] [\-\-cred\fP \fIcredential\fP \fB] **[\-\-exclude\-hosts\fP \fIip_address\fP \fB] [\-\-port=\fP \fIport\fP \fB]\fP \fB[\-\-use\-paramiko=\fP \fI(True | False)\fP \fB]\fP \fB[\-\-ssl\-cert\-verify=\fP \fI(True | False)\fP \fB]\fP \fB[\-\-ssl\-protocol=\fP \fIprotocol\fP \fB]\fP \fB[\-\-disable\-ssl=\fP \fI(True | False)\fP \fB]\fP
.sp
For example, if a source contains a value of \fBserver1creds\fP for the \fB\-\-cred\fP option, and you want to change that source to use both the \fBserver1creds\fP and \fBserver2creds\fP credentials, you would edit the source as follows:
.sp
\fBQPC_VAR_PROGRAM_NAME source edit \-\-name=mysource \-\-cred server1creds server2creds\fP
.sp
\fBTIP:\fP After editing a source, use the \fBQPC_VAR_PROGRAM_NAME source show\fP command to review those edits.
.SS Listing and Showing Sources
.sp
The \fBQPC_VAR_PROGRAM_NAME source list\fP command returns the details for all configured sources. The output of this command includes the host names, IP addresses, or IP ranges, the credentials, and the ports that are configured for each source.
.sp
\fBQPC_VAR_PROGRAM_NAME source list [\-\-type=\fP \fI(network | vcenter | satellite | openshift | rhacs | ansible)\fP \fB]\fP
.sp
\fB\-\-type=type\fP
.INDENT 0.0
.INDENT 3.5
Optional.  Filters the results by source type. The value must be \fBnetwork\fP, \fBvcenter\fP, \fBsatellite\fP, \fBopenshift\fP, \fBrhacs\fP, or \fBansible\fP\&.
.UNINDENT
.UNINDENT
.sp
The \fBQPC_VAR_PROGRAM_NAME source show\fP command is the same as the \fBQPC_VAR_PROGRAM_NAME source list\fP command, except that it returns details for a single specified source.
.sp
\fBQPC_VAR_PROGRAM_NAME source show \-\-name=\fP \fIsource\fP
.sp
\fB\-\-name=source\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the source to display.
.UNINDENT
.UNINDENT
.SS Clearing Sources
.sp
As the network infrastructure changes, it might be necessary to delete some sources. Use the \fBQPC_VAR_PROGRAM_NAME source clear\fP command to delete sources.
.sp
\fBQPC_VAR_PROGRAM_NAME source clear (\-\-name=\fP \fIname\fP \fB| \-\-all)\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Contains the name of the source to clear. Mutually exclusive with the \fB\-\-all\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-all\fP
.INDENT 0.0
.INDENT 3.5
Clears all stored sources. Mutually exclusive with the \fB\-\-name\fP option.
.UNINDENT
.UNINDENT
.SH SCANS
.sp
Use the \fBQPC_VAR_PROGRAM_NAME scan\fP command to create, run and manage scans.
.sp
A scan contains a set of one or more sources of any type, plus additional options that refine how the scan runs, such as the products to omit from the scan, and the maximum number of parallel system scans. Because a scan can combine sources of different types, you can include any combination of Network, OpenShift, Red Hat Advanced Cluster Security, Ansible Automation Platform, Satellite, and vCenter Server sources in a single scan. When you configure a scan to include multiple sources of different types, for example a Network source and a Satellite source, the same part of your infrastructure might be scanned more than once. The results for this type of scan could show duplicate information in the reported results. However, you have the option to view the unprocessed detailed report that would show these duplicate results for each source type, or a processed deployments report with deduplicated and merged results.
.sp
The creation of a scan groups sources, the credentials contained within those sources, and the other options so that the act of running the scan is repeatable. When you run the scan, each instance is saved as a scan job.
.SS Creating and Editing Scans
.sp
Use the \fBQPC_VAR_PROGRAM_NAME scan add\fP command to create scan objects with one or more sources. This command creates a scan object that references the supplied sources and contains any options supplied by the user.
.sp
\fBQPC_VAR_PROGRAM_NAME scan add \-\-name\fP \fIname\fP \fB\-\-sources=\fP \fIsource_list\fP \fB[\-\-max\-concurrency=\fP \fIconcurrency\fP \fB]\fP \fB[\-\-disabled\-optional\-products=\fP \fIproducts_list\fP \fB]\fP \fB[\-\-enabled\-ext\-product\-search=\fP \fIproducts_list\fP \fB]\fP \fB[\-\-ext\-product\-search\-dirs=\fP \fIsearch_dirs_list\fP \fB]\fP
.sp
\fB\-\-sources=source_list\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the list of source names to use to run the scan.
.UNINDENT
.UNINDENT
.sp
\fB\-\-max\-concurrency=concurrency\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the maximum number of parallel system scans. If this value is not provided, the default is \fB50\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-disabled\-optional\-products=products_list\fP
.INDENT 0.0
.INDENT 3.5
Optional. Contains the list of products to exclude from inspection. Valid values are \fBjboss_eap\fP, \fBjboss_fuse\fP, \fBjboss_ws\fP, and \fBjboss_brms\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-enabled\-ext\-product\-search=products_list\fP
.INDENT 0.0
.INDENT 3.5
Optional. Contains the list of products to include for the extended product search. Extended product search is used to find products that might be installed in non\-default locations. Valid values are \fBjboss_eap\fP, \fBjboss_fuse\fP, \fBjboss_ws\fP, and \fBjboss_brms\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-ext\-product\-search\-dirs=search_dirs_list\fP
.INDENT 0.0
.INDENT 3.5
Optional. Contains a list of absolute paths of directories to search with the extended product search. This option uses the provided list of directories to search for the presence of Red Hat JBoss Enterprise Application Platform (JBoss EAP), Red Hat Fuse (formerly Red Hat JBoss Fuse), Red Hat JBoss Web Server (JBoss Web Server), and Red Hat Decision Manager (formerly Red Hat JBoss BRMS).
.UNINDENT
.UNINDENT
.sp
The information in a scan might change as the structure of the network changes. Use the \fBQPC_VAR_PROGRAM_NAME scan edit\fP command to edit an existing scan to accommodate those changes.
.sp
Although \fBQPC_VAR_PROGRAM_NAME scan\fP options can accept more than one value, the \fBQPC_VAR_PROGRAM_NAME scan edit\fP command is not additive. To edit a scan and add a new value for an option, you must enter both the current and the new values for that option. Include only the options that you want to change in the \fBQPC_VAR_PROGRAM_NAME scan edit\fP command. Options that are not included are not changed.
.sp
\fBQPC_VAR_PROGRAM_NAME scan edit \-\-name\fP \fIname\fP \fB[\-\-sources=\fP \fIsource_list\fP \fB]\fP \fB[\-\-max\-concurrency=\fP \fIconcurrency\fP \fB]\fP \fB[\-\-disabled\-optional\-products=\fP \fIproducts_list\fP \fB]\fP \fB[\-\-enabled\-ext\-product\-search=\fP \fIproducts_list\fP \fB]\fP \fB[\-\-ext\-product\-search\-dirs=\fP \fIsearch_dirs_list\fP \fB]\fP
.sp
For example, if a scan contains a value of \fBnetwork1source\fP for the \fB\-\-sources\fP option, and you want to change that scan to use both the \fBnetwork1source\fP and \fBsatellite1source\fP sources, you would edit the scan as follows:
.sp
\fBQPC_VAR_PROGRAM_NAME scan edit \-\-name=myscan \-\-sources network1source satellite1source\fP
.sp
If you want to reset the \fB\-\-disabled\-optional\-products\fP, \fB\-\-enabled\-ext\-product\-search\fP, or \fB\-\-ext\-product\-search\-dirs\fP back to their default values, you must provide the flag without any product values.
.sp
For example, if you want to reset the \fB\-\-disabled\-optional\-products\fP option back to the default values, you would edit the scan as follows:
.sp
\fBQPC_VAR_PROGRAM_NAME scan edit \-\-name=myscan \-\-disabled\-optional\-products\fP
.sp
\fBTIP:\fP After editing a scan, use the \fBQPC_VAR_PROGRAM_NAME scan show\fP command to review those edits.
.SS Listing and Showing Scans
.sp
The \fBQPC_VAR_PROGRAM_NAME scan list\fP command returns the summary details for all created scan objects or all created scan objects of a certain type. The output of this command includes the identifier, the source or sources, and any options supplied by the user.
.sp
\fBQPC_VAR_PROGRAM_NAME scan list\fP \fB\-\-type=\fP \fI(connect | inspect)\fP
.sp
\fB\-\-type=type\fP
.INDENT 0.0
.INDENT 3.5
Optional. Filters the results by scan type. This value must be \fBconnect\fP or \fBinspect\fP\&. A scan of type \fBconnect\fP is a scan that began the process of connecting to the defined systems in the sources, but did not transition into inspecting the contents of those systems. A scan of type \fBinspect\fP is a scan that moves into the inspection process.
.UNINDENT
.UNINDENT
.sp
The \fBQPC_VAR_PROGRAM_NAME scan show\fP command is the same as the \fBQPC_VAR_PROGRAM_NAME scan list\fP command, except that it returns summary details for a single specified scan object.
.sp
\fBQPC_VAR_PROGRAM_NAME scan show \-\-name\fP \fIname\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the name of the scan object to display.
.UNINDENT
.UNINDENT
.SS Clearing Scans
.sp
As the network infrastructure changes, it might be necessary to delete some scan objects. Use the \fBQPC_VAR_PROGRAM_NAME scan clear\fP command to delete scans.
.sp
\fBQPC_VAR_PROGRAM_NAME scan clear (\-\-name=\fP \fIname\fP \fB| \-\-all)\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Contains the name of the source to clear. Mutually exclusive with the \fB\-\-all\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-all\fP
.INDENT 0.0
.INDENT 3.5
Clears all stored scan objects. Mutually exclusive with the \fB\-\-name\fP option
.UNINDENT
.UNINDENT
.SH SCANNING
.sp
Use the \fBQPC_VAR_PROGRAM_NAME scan start\fP command to create and run a scan job from an existing scan object. This command scans all of the host names or IP addresses that are defined in the supplied sources of the scan object from which the job is created. Each instance of a scan job is assigned a unique numeric \fIscan job identifier\fP to identify the scan results, so that the results data can be viewed later. Each instance of a scan job is also assigned a numeric \fIreport identifier\fP for the generated report data. Because some scan jobs do not result in report generation, scan job identifiers and report identifiers might not match.
.sp
\fBIMPORTANT:\fP If any SSH agent connection is set up for a target host, that connection will be used as a fallback connection.
.sp
\fBQPC_VAR_PROGRAM_NAME scan start \-\-name\fP \fIscan_name\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Contains the name of the scan object to run.
.UNINDENT
.UNINDENT
.SS Viewing Scan Jobs
.sp
The \fBQPC_VAR_PROGRAM_NAME scan job\fP command returns the list of scan jobs for a scan object or information about a single scan job for a scan object. For the list of scan jobs, the output of this command includes the scan job identifiers for each currently running or completed scan job, the current state of each scan job, and the source or sources for that scan. For information about a single scan job, the output of this command includes status of the scan job, the start time of the scan job, and (if applicable) the end time of the scan job.
.sp
\fBQPC_VAR_PROGRAM_NAME scan job (\-\-name\fP \fIscan_name\fP | \fB\-\-id=\fP \fIscan_job_identifier\fP \fB) \-\-status=\fP \fI(created | pending | running | paused | canceled | completed | failed)\fP
.sp
\fB\-\-name=name\fP
.INDENT 0.0
.INDENT 3.5
Contains the name of the scan object for which to display the scan jobs. Mutually exclusive with the \fB\-\-id\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-id=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the identifier of a specified scan job to display. Mutually exclusive with the \fB\-\-name\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-status=status\fP
.INDENT 0.0
.INDENT 3.5
Optional. Filters the results by scan job state. This value must be \fBcreated\fP, \fBpending\fP, \fBrunning\fP, \fBpaused\fP, \fBcanceled\fP, \fBcompleted\fP, or \fBfailed\fP\&.
.UNINDENT
.UNINDENT
.SS Controlling Scans
.sp
When scan jobs are queued and running, you might need to control the execution of scan jobs due to the needs of other business processes in your organization. The \fBpause\fP, \fBrestart\fP, and \fBcancel\fP subcommands enable you to control scan job execution.
.sp
The \fBQPC_VAR_PROGRAM_NAME scan pause\fP command halts the execution of a scan job, but enables it to be restarted at a later time.
.sp
\fBQPC_VAR_PROGRAM_NAME scan pause \-\-id=\fP \fIscan_job_identifier\fP
.sp
\fB\-\-id=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the identifier of the scan job to pause.
.UNINDENT
.UNINDENT
.sp
The \fBQPC_VAR_PROGRAM_NAME scan restart\fP command restarts the execution of a scan job that is paused.
.sp
\fBQPC_VAR_PROGRAM_NAME scan restart \-\-id=\fP \fIscan_job_identifier\fP
.sp
\fB\-\-id=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the identifier of the scan job to restart.
.UNINDENT
.UNINDENT
.sp
The \fBQPC_VAR_PROGRAM_NAME scan cancel\fP command cancels the execution of a scan job. A canceled scan job cannot be restarted.
.sp
\fBQPC_VAR_PROGRAM_NAME scan cancel \-\-id=\fP \fIscan_job_identifier\fP
.sp
\fB\-\-id=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Required. Contains the identifier of the scan job to cancel.
.UNINDENT
.UNINDENT
.SH REPORTS
.sp
Use the \fBQPC_VAR_PROGRAM_NAME report\fP command to retrieve a report from a scan. You can retrieve a report in a JavaScript Object Notation (JSON) format or in a comma\-separated values (CSV) format. There are three different types of reports that you can retrieve, a \fIdetails\fP report, a \fIdeployments\fP report, and an \fIinsights\fP report.
.SS Viewing the Details Report
.sp
The \fBQPC_VAR_PROGRAM_NAME report details\fP command retrieves a detailed report that contains the unprocessed facts that are gathered during a scan. These facts are the raw output from Network, vCenter, Satellite, Openshift, Red Hat Advanced Cluster Security and Ansible scans, as applicable.
.sp
\fBQPC_VAR_PROGRAM_NAME report details (\-\-scan\-job\fP \fIscan_job_identifier\fP \fB|\fP \fB\-\-report\fP \fIreport_identifier\fP \fB)\fP \fB(\-\-json|\-\-csv)\fP \fB\-\-output\-file\fP \fIpath\fP \fB[\-\-mask]\fP
.sp
\fB\-\-scan\-job=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the scan job identifier to use to retrieve the report. Mutually exclusive with the \fB\-\-report\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-report=report_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the report identifier to use to retrieve the report. Mutually exclusive with the \fB\-\-scan\-job\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-json\fP
.INDENT 0.0
.INDENT 3.5
Displays the results of the report in JSON format. Mutually exclusive with the \fB\-\-csv\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-csv\fP
.INDENT 0.0
.INDENT 3.5
Displays the results of the report in CSV format. Mutually exclusive with the \fB\-\-json\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-output\-file=path\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the path to a file location where the report data is saved. The file extension must be \fB\&.json\fP for the JSON report or \fB\&.csv\fP for the CSV report. When the field is not provided and \fI\-\-json\fP specified, a JSON report will be generated to stdout.
.UNINDENT
.UNINDENT
.sp
\fB\-\-mask\fP
.INDENT 0.0
.INDENT 3.5
Displays the results of the report with sensitive data masked by a hash.
.UNINDENT
.UNINDENT
.SS Viewing the Deployments Report
.sp
The \fBQPC_VAR_PROGRAM_NAME report deployments\fP command retrieves a report that contains the processed fingerprints from a scan. A \fIfingerprint\fP is the set of system, product, and entitlement facts for a particular physical or virtual machine. A processed fingerprint results from a procedure that merges facts from various sources, and, when possible, deduplicates redundant systems.
.sp
For example, the raw facts of a scan that includes both Network and vCenter sources could show two instances of a machine, indicated by an identical MAC address. The deployments report results in a deduplicated and merged fingerprint that shows both the Network and vCenter facts for that machine as a single set.
.sp
\fBQPC_VAR_PROGRAM_NAME report deployments (\-\-scan\-job\fP \fIscan_job_identifier\fP \fB|\fP \fB\-\-report\fP \fIreport_identifier\fP \fB)\fP \fB(\-\-json|\-\-csv)\fP \fB\-\-output\-file\fP \fIpath\fP \fB[\-\-mask]\fP
.sp
\fB\-\-scan\-job=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the scan job identifier to use to retrieve the report. Mutually exclusive with the \fB\-\-report\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-report=report_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the report identifier to use to retrieve the report. Mutually exclusive with the \fB\-\-scan\-job\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-json\fP
.INDENT 0.0
.INDENT 3.5
Displays the results of the report in JSON format. Mutually exclusive with the \fB\-\-csv\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-csv\fP
.INDENT 0.0
.INDENT 3.5
Displays the results of the report in CSV format. Mutually exclusive with the \fB\-\-json\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-output\-file=path\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the path to a file location where the report data is saved. The file extension must be \fB\&.json\fP for the JSON report or \fB\&.csv\fP for the CSV report. When the field is not provided and \fI\-\-json\fP specified, a JSON report will be generated to stdout.
.UNINDENT
.UNINDENT
.sp
\fB\-\-mask\fP
.INDENT 0.0
.INDENT 3.5
Displays the results of the report with sensitive data masked by a hash.
.UNINDENT
.UNINDENT
.SS Viewing the Insights Report
.sp
The \fBQPC_VAR_PROGRAM_NAME report insights\fP command retrieves a report that contains the hosts to be uploaded to the subscription insights service. A \fIhost\fP is the set of system, product, and entitlement facts for a particular physical or virtual machine.
.sp
\fBQPC_VAR_PROGRAM_NAME report insights (\-\-scan\-job\fP \fIscan_job_identifier\fP \fB|\fP \fB\-\-report\fP \fIreport_identifier\fP \fB)\fP \fB\-\-output\-file\fP \fIpath\fP
.sp
\fB\-\-scan\-job=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the scan job identifier to use to retrieve the report. Mutually exclusive with the \fB\-\-report\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-report=report_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the report identifier to use to retrieve the report. Mutually exclusive with the \fB\-\-scan\-job\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-output\-file=path\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the path to a file location where the report data is saved. The file extension must be \fB\&.tar.gz\fP\&.  If this field is not provided, it will automatically generate a JSON report to stdout.
.UNINDENT
.UNINDENT
.SS Downloading Reports
.sp
The \fBQPC_VAR_PROGRAM_NAME report download\fP command downloads a set of reports, identified either by scan job identifer or report identifier, as a TAR.GZ file.  The report TAR.GZ file contains the details and deployments reports in both their JSON and CSV formats.
.sp
\fBQPC_VAR_PROGRAM_NAME report download (\-\-scan\-job\fP \fIscan_job_identifier\fP \fB|\fP \fB\-\-report\fP \fIreport_identifier\fP \fB)\fP \fB\-\-output\-file\fP \fIpath\fP \fB[\-\-mask]\fP
.sp
\fB\-\-scan\-job=scan_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the scan job identifier to use to download the reports. Mutually exclusive with the \fB\-\-report\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-report=report_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the report identifier to use to download the reports. Mutually exclusive with the \fB\-\-scan\-job\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-output\-file=path\fP
.INDENT 0.0
.INDENT 3.5
Required. Sets the path to a file location where the report data is saved. The file extension must be \fB\&.tar.gz\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-mask\fP
.INDENT 0.0
.INDENT 3.5
Download the reports with sensitive data masked by a hash.
.UNINDENT
.UNINDENT
.SS Merging Scan Job Results
.sp
The \fBQPC_VAR_PROGRAM_NAME report merge\fP command merges report data and returns the report identifier of the merged report. You can use this report identifier and the \fBQPC_VAR_PROGRAM_NAME report\fP command with the \fBdetails\fP or \fBdeployments\fP subcommands to retrieve a report from the merged results.
.sp
\fBQPC_VAR_PROGRAM_NAME report merge (\-\-job\-ids\fP \fIscan_job_identifiers\fP \fB|\fP \fB\-\-report\-ids\fP \fIreport_identifiers\fP \fB|\fP \fB\-\-json\-files\fP \fIjson_details_report_files\fP \fB|\fP \fB\-\-json\-directory\fP \fIpath_to_directory_of_json_files\fP \fB)\fP
.sp
\fB\-\-job\-ids=scan_job_identifiers\fP
.INDENT 0.0
.INDENT 3.5
Contains the scan job identifiers of the report data that is to be merged. Mutually exclusive with the \fB\-\-report\-ids\fP option and the \fB\-\-json\-files\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-report\-ids=report_identifiers\fP
.INDENT 0.0
.INDENT 3.5
Contains the report identifiers of the report data that is to be merged.  Mutually exclusive with the \fB\-\-job\-ids\fP option and the \fB\-\-json\-files\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-json\-files=json_details_report_files\fP
.INDENT 0.0
.INDENT 3.5
Contains the JSON details report files to use to merge report data.  Mutually exclusive with the \fB\-\-job\-ids\fP option and the \fB\-\-report\-ids\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-json\-directory=path_to_directory_of_json_files\fP
.INDENT 0.0
.INDENT 3.5
Contains a path to a directory with JSON details report files to use to merge report data. Mutually exclusive with the \fB\-\-job\-ids\fP and the \fB\-\-report\-ids\fP option.
.UNINDENT
.UNINDENT
.sp
The \fBQPC_VAR_PROGRAM_NAME report merge\fP command runs an asynchronous job. The output of this command provides a job ID that you can use to check the status of the merge job. To check the status of a merge job, run the following command, where the example job ID is \fB1\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# QPC_VAR_PROGRAM_NAME report merge\-status \-\-job 1
.EE
.UNINDENT
.UNINDENT
.SS Viewing the Status of a Report Merge
.sp
The \fBQPC_VAR_PROGRAM_NAME report merge\-status\fP command can be used to check the status of a large merge of JSON details report files. A large merge is created with the \fBQPC_VAR_PROGRAM_NAME report merge \-\-json\-directory=path_to_directory_of_json_files\fP command. This command returns a merge job ID that you can use to access the status of the merge.
.sp
\fBQPC_VAR_PROGRAM_NAME report merge\-status (\-\-job\fP \fIreport_job_identifier\fP \fB)\fP
.sp
\fB\-\-job=report_job_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the job identifier to use to check for the status of a merge.
.UNINDENT
.UNINDENT
.SS Manually Reprocessing Reports
.sp
The \fBQPC_VAR_PROGRAM_NAME report upload\fP command uploads a details report to reprocess it.  This could be useful if a value in the details report caused a system to be excluded.  After modication of the details report, simply run the \fBQPC_VAR_PROGRAM_NAME report upload \-\-json\-file DETAILS_REPORT_JSON\fP\&.
.sp
\fBQPC_VAR_PROGRAM_NAME report upload (\-\-json\-file\fP \fIjson_details_report_file\fP \fB)\fP
.sp
\fB\-\-json\-file=json_details_report_file\fP
.INDENT 0.0
.INDENT 3.5
Contains the JSON details report file path to upload for reprocessing.
.UNINDENT
.UNINDENT
.SH INSIGHTS
.sp
Use the \fBQPC_VAR_PROGRAM_NAME insights\fP command to interact with Red Hat Insights and its services.
.SS Configuring Insights
.sp
To configure the connection to Insights server, you may optionally provide the host address and port to override the default values.
.sp
\fBQPC_VAR_PROGRAM_NAME insights config \-\-host=\fP \fIhost\fP \fB[\-\-port=\fP \fIport\fP \fB]\fP \fB[\-\-use\-http]\fP
.sp
\fB\-\-host=host\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the host address for Insights. The default host is \fBconsole.redhat.com\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-port=port\fP
.INDENT 0.0
.INDENT 3.5
Optional. Sets the port to use to connect to Insights. The default port is \fB443\fP\&.
.UNINDENT
.UNINDENT
.sp
\fB\-\-use\-http\fP
.INDENT 0.0
.INDENT 3.5
Optional. Determines whether to use HTTP instead of HTTPS. The default value is \fBFalse\fP\&.
.UNINDENT
.UNINDENT
.SS Login to Insights
.sp
To be able to publish reports to Insights, one must be authorized and successfully logged into Insights.
.sp
\fBQPC_VAR_PROGRAM_NAME insights login\fP
.sp
This command requests the authorization of the user to Insights. A user code and associated authorization URL is displayed that the user can access in a separate browser window to login to Insights and be authorized to use {{QPC_VAR_PROGRAM_NAME}} to publish reports.
.SS Publishing to Insights
.sp
The \fBQPC_VAR_PROGRAM_NAME insights publish\fP command allows you to publish an Insights report to Red Hat Insights and its services. You have two options for publishing a report: use the associated report identifier from the generating scan, or provide a previously downloaded report as an input file.
.sp
\fBQPC_VAR_PROGRAM_NAME insights publish (\-\-report\fP \fIreport_identifiers\fP \fB| \-\-input\-file\fP \fIpath_to_tar_gz\fP )
.sp
\fB\-\-report=report_identifier\fP
.INDENT 0.0
.INDENT 3.5
Contains the report identifier to use to retrieve and publish the Insights report. Mutually exclusive with the \fB\-\-input\-file\fP option.
.UNINDENT
.UNINDENT
.sp
\fB\-\-input\-file=path to tar.gz containing the Insights report\fP
.INDENT 0.0
.INDENT 3.5
Contains the path to the tar.gz containing the Insights report. Mutually exclusive with \fB\-\-report\fP option.
.UNINDENT
.UNINDENT
.SH OPTIONS FOR ALL COMMANDS
.sp
The following options are available for every QPC_VAR_PROJECT command.
.sp
\fB\-\-help\fP
.INDENT 0.0
.INDENT 3.5
Prints the help for the \fBQPC_VAR_PROGRAM_NAME\fP command or subcommand.
.UNINDENT
.UNINDENT
.sp
\fB\-v\fP
.INDENT 0.0
.INDENT 3.5
Enables the verbose mode. The \fB\-vvv\fP option increases verbosity to show more information. The \fB\-vvvv\fP option enables connection debugging.
.UNINDENT
.UNINDENT
.SH EXAMPLES
.INDENT 0.0
.IP \(bu 2
Creating a new network type credential with a password
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name net_cred \-\-type network \-\-username QPC_VAR_PROGRAM_NAME_user \-\-password\fP
.IP \(bu 2
Creating a new network type credential with a keyfile
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name net_cred2 \-\-type network \-\-username QPC_VAR_PROGRAM_NAME_user \-\-sshkeyfile /etc/ssh/ssh_host_rsa_key\fP
.IP \(bu 2
Creating a new network type credential with a keyfile requiring a passphrase
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name net_cred3 \-\-type network \-\-username QPC_VAR_PROGRAM_NAME_user \-\-sshkeyfile /etc/ssh/ssh_host_rsa_key \-\-sshpassphrase\fP
.IP \(bu 2
Creating a new network type credential with an SSH key
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name net_cred4 \-\-type network \-\-username QPC_VAR_PROGRAM_NAME_user \-\-sshkey\fP
.IP \(bu 2
Creating a new network type credential with an SSH key requiring a passphrase
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name net_cred5 \-\-type network \-\-username QPC_VAR_PROGRAM_NAME_user \-\-sshkey \-\-sshpassphrase\fP
.IP \(bu 2
Creating a new openshift type credential with a token
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name ocp_cred \-\-type openshift \-\-token\fP
.IP \(bu 2
Creating a new openshift type credential with a password
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name ocp_cred2 \-\-type openshift \-\-username ocp_user \-\-password\fP
.IP \(bu 2
Creating a new vcenter type credential
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name vcenter_cred \-\-type vcenter \-\-username vc_user \-\-password\fP
.IP \(bu 2
Creating a new satellite type credential
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name sat_cred \-\-type satellite \-\-username sat_user \-\-password\fP
.IP \(bu 2
Creating a new ansible type credential
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name ansible_cred \-\-type ansible \-\-username ansible_user \-\-password\fP
.IP \(bu 2
Creating a new rhacs type credential
.sp
\fBQPC_VAR_PROGRAM_NAME cred add \-\-name rhacs_cred \-\-type rhacs \-\-token\fP
.IP \(bu 2
Listing all credentials
.sp
\fBQPC_VAR_PROGRAM_NAME cred list\fP
.IP \(bu 2
Listing network credentials
.sp
\fBQPC_VAR_PROGRAM_NAME cred list \-\-type network\fP
.IP \(bu 2
Showing details for a specified credential
.sp
\fBQPC_VAR_PROGRAM_NAME cred show \-\-name ocp_cred2\fP
.IP \(bu 2
Clearing all credentials
.sp
\fBQPC_VAR_PROGRAM_NAME cred clear \-\-all\fP
.IP \(bu 2
Clearing a specified credential
.sp
\fBQPC_VAR_PROGRAM_NAME cred clear \-\-name vcenter_cred\fP
.IP \(bu 2
Creating a new network source
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name net_source \-\-type network \-\-hosts 1.192.0.19 1.192.0.20 \-\-cred net_cred\fP
.IP \(bu 2
Creating a new network source with an excluded host
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name net_source2 \-\-type network \-\-hosts 1.192.1.[0:255] \-\-exclude\-hosts 1.192.1.19 \-\-cred net_cred\fP
.IP \(bu 2
Creating a new vcenter source specifying a SSL protocol
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name vcenter_source \-\-type vcenter \-\-hosts 1.192.0.19 \-\-cred vcenter_cred \-\-ssl\-protocol SSLv23\fP
.IP \(bu 2
Creating a new satellite source disabling SSL
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name sat_source \-\-type satellite \-\-hosts satellite.example.redhat.com \-\-disable\-ssl true \-\-cred sat_cred\fP
.IP \(bu 2
Creating a new ansible source disabling SSL certificate verification
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name ansible_source \-\-type ansible \-\-hosts  10.0.205.205 \-\-ssl\-cert\-verify false \-\-cred ansible_cred\fP
.IP \(bu 2
Creating a new rhacs source
.sp
\fBQPC_VAR_PROGRAM_NAME source add \-\-name rhacs_source \-\-type rhacs \-\-hosts  rhacs\-cluster.example.com \-\-cred rhacs_cred\fP
.IP \(bu 2
Editing a source
.sp
\fBQPC_VAR_PROGRAM_NAME source edit \-\-name net_source \-\-hosts 1.192.0.[0:255] \-\-cred net_cred net_cred2\fP
.IP \(bu 2
Creating a scan
.sp
\fBQPC_VAR_PROGRAM_NAME scan add \-\-name net_scan \-\-sources net_source net_source2\fP
.IP \(bu 2
Creating a scan that includes a list of products in the inspection
.sp
\fBQPC_VAR_PROGRAM_NAME scan add \-\-name net_scan2 \-\-sources net_source \-\-enabled\-ext\-product\-search jboss_eap\fP
.IP \(bu 2
Editing a scan setting maximum concurrency
.sp
\fBQPC_VAR_PROGRAM_NAME scan edit \-\-name net_scan \-\-max\-concurrency 10\fP
.IP \(bu 2
Listing a scan filtering by scan type
.sp
\fBQPC_VAR_PROGRAM_NAME scan list \-\-type inspect\fP
.IP \(bu 2
Running a scan
.sp
\fBQPC_VAR_PROGRAM_NAME scan start \-\-name net_scan\fP
.IP \(bu 2
Canceling a scan
.sp
\fBQPC_VAR_PROGRAM_NAME scan cancel \-\-id 1\fP
.IP \(bu 2
Viewing scan jobs related to a specified scan
.sp
\fBQPC_VAR_PROGRAM_NAME scan job \-\-name net_scan\fP
.IP \(bu 2
Retrieves a JSON details report with no output file
.sp
\fBQPC_VAR_PROGRAM_NAME report details \-\-report 2  \-\-json\fP
.IP \(bu 2
Retrieves a JSON details report
.sp
\fBQPC_VAR_PROGRAM_NAME report details \-\-report 2  \-\-json \-\-output\-file path_to_your_file.json\fP
.IP \(bu 2
Retrieves a CSV deployments report
.sp
\fBQPC_VAR_PROGRAM_NAME report deployments \-\-report 2  \-\-csv \-\-output\-file path_to_your_file.csv\fP
.IP \(bu 2
Retrieves a JSON Insights report with no output file
.sp
\fBQPC_VAR_PROGRAM_NAME report insights \-\-scan\-job 1\fP
.IP \(bu 2
Retrieves a tar.gz Insights report
.sp
\fBQPC_VAR_PROGRAM_NAME report insights \-\-scan\-job 1 \-\-output\-file path_to_your_file.tar.gz\fP
.IP \(bu 2
Downloading a set of reports
.sp
\fBQPC_VAR_PROGRAM_NAME report download \-\-report 1 \-\-output\-file path_to_your_file.tar.gz\fP
.IP \(bu 2
Merging scan job results using ids
.sp
\fBQPC_VAR_PROGRAM_NAME report report merge \-\-job\-ids 1 3\fP
.IP \(bu 2
Merging scan job results providing JSON files
.sp
\fBQPC_VAR_PROGRAM_NAME report report merge \-\-json\-files path_to_report_1.json path_to_report_2.json\fP
.IP \(bu 2
Reprocessing a report
.sp
\fBQPC_VAR_PROGRAM_NAME report upload \-\-json\-file path_to_report.json\fP
.IP \(bu 2
Configuring Insights
.sp
\fBQPC_VAR_PROGRAM_NAME insights config \-\-host stage.console.redhat.com \-\-port 8080\fP
.IP \(bu 2
Login to Insights
.sp
\fBQPC_VAR_PROGRAM_NAME insights login\fP
.IP \(bu 2
Publishing to Insights using a report id
.sp
\fBQPC_VAR_PROGRAM_NAME insights publish \-\-report 1\fP
.IP \(bu 2
Publishing to Insights using a previously downloaded report
.sp
\fBQPC_VAR_PROGRAM_NAME insights publish \-\-input\-file path_to_report.tar.gz\fP
.UNINDENT
.SH SECURITY CONSIDERATIONS
.sp
The authentication data in the credentials and the network\-specific and system\-specific data in sources are stored in an AES\-256 encrypted value within a database. A vault password is used to encrpyt and decrypt values. The vault password and decrypted values are in the system memory, and could theoretically be written to disk if memory swapping is enabled.
.SH AUTHORS
.sp
QPC_VAR_PROJECT is written and maintained by Red Hat. Please refer to the commit history for a full list of contributors.
.SH COPYRIGHT
.sp
Copyright 2018\-QPC_VAR_CURRENT_YEAR Red Hat, Inc. Licensed under the GNU Public License version 3.
.\" Generated by docutils manpage writer.
.
